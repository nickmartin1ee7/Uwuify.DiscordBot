name: Development CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore Uwuify.DiscordBot.sln

    - name: Build
      run: dotnet build --no-restore Uwuify.DiscordBot.sln

    - name: Test
      run: dotnet test --no-build --verbosity normal Uwuify.DiscordBot.sln

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESSTOKEN }}
        
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v1.6.0
      
    - name: Pull Source Code
      uses: actions/checkout@v2
      
    - name: Build Docker Image (DiscordBot)
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: docker buildx build --platform linux/arm64,linux/amd64 -f "Uwuify.DiscordBot.WorkerService/Dockerfile" --force-rm -t nickmartin1ee7/uwuifydiscordbotworkerservice:dev --push .
    
    - name: Publish Docker Image (DiscordBot)
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: docker push nickmartin1ee7/uwuifydiscordbotworkerservice:dev
          
    - name: Build Docker Image (ShardManager)
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: docker buildx build --platform linux/arm64,linux/amd64 -f "Uwuify.ShardManager.WebApi/Dockerfile" --force-rm -t nickmartin1ee7/uwuifyshardmanagerwebapi:dev --push .
    
    - name: Publish Docker Image (ShardManager)
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: docker push nickmartin1ee7/uwuifyshardmanagerwebapi:dev

  deployment:
    runs-on: self-hosted
    needs: publish

    steps:
    - name: Trigger Development Image Pull
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: curl --location --request POST '${{ secrets.DEV_WEBHOOK_URI }}'
